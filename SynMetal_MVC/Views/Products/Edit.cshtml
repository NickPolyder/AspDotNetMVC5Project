@using SynMetal_MVC.Models
@model Product

@{
    ViewBag.Title = "Edit";

    Session.Add("EditID", Model.ProductId);
    Session.Add("EditUrl", PhotoEdit.EditProduct);
    Session.Add("FromEditProduct", true);

    PhotoFile file = null;
    if(Model.Photo != null)
    {
        file = Model.Photo;
    }
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductId)
        <div id="UploadPhotoDiv">
            @if (file == null)
            { 
     @Html.Partial("Partial/_PhotoUpEdDel", new PhotoFile())
            }
            else
            {
              @Html.Partial("Partial/_PhotoUpEdDel", file)
            }
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class="control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("ProdCategories",String.Empty)
                @Html.ValidationMessageFor(model => model.Category)
                @if (ViewBag.ProdCatError != null)
                {
                    <p class="text-danger">@ViewBag.ProdCatError</p>
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Products", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
   
}
